#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main()
{
    char matriz[100][100],palavras[100][100];
    int i,j,k,l,t,quant,tam;
    int ocorrencia;

    printf("CACA PALAVRAS 3000\nDIGITE O TAMANHO DO CACA PALAVRAS( TAMxTAM e MAX 100x100 ):");
    scanf("%d", &tam);

    printf("DIGITE AS LETRAS DO CACA PALAVRAS:\n");

	for(i=0;i<tam;i++)
 	   scanf("%s", matriz[i]);

    printf("DIGITE QUANTAS PALAVRAS DESEJA BUSCAR:");
    scanf("%d", &quant);
    printf("DIGITE A PALAVRA QUE DESEJA BUSCAR:");

	for(i=0;i<quant;i++)
    		scanf("%s", palavras[i]);
    		printf("FINAL DO PROGRAMA:\n");

for (k=0;k<tam;k++)
    {

        ocorrencia=0;

        for (i=0;i<tam;i++)
        {
            for (j=0;j<tam;j++)
            {
                if (palavras[k][0]==matriz[i][j])
                {
                    if (palavras[k][1]==matriz[i-1][j])
                    {
                        ocorrencia = 1;

                        for (l=0;l<strlen(palavras[k]);l++)
                            if (palavras[k][l]!=matriz[i-l][j])
                                ocorrencia = 0;

                        if (ocorrencia)
                            break;
                    }

                    if (palavras[k][1]==matriz[i+1][j])
                    {
                        ocorrencia = 1;

                        for (t=0;t<strlen(palavras[k]);t++)
                            if (palavras[k][t]!=matriz[i+t][j])
                                ocorrencia=0;

                        if (ocorrencia)
                            break;
                    }

                    if (palavras[k][1]==matriz[i][j+1])
                    {
                        ocorrencia=1;

                        for (t=0;t<strlen(palavras[k]);t++)
                            if (palavras[k][t]!=matriz[i][j+t])
                                ocorrencia=0;

                        if (ocorrencia)
                            break;
                    }

                    if (palavras[k][1]==matriz[i][j - 1])
                    {
                       ocorrencia=1;

                        for (t=0; t<strlen(palavras[k]); t++)
                            if (palavras[k][t] != matriz[i][j - t])
                                ocorrencia = 0;

                        if (ocorrencia)
                            break;
                    }

                    if (palavras[k][1] == matriz[i - 1][j + 1])
                    {
                        ocorrencia = 1;

                        for (t = 0; t < strlen(palavras[k]); t++)
                            if (palavras[k][t] != matriz[i - t][j + t])
                                ocorrencia= 0;

                        if (ocorrencia)
                            break;
                    }

                    if (palavras[k][1] == matriz[i - 1][j - 1])
                    {
                        ocorrencia = 1;

                        for (t = 0; t < strlen(palavras[k]); t++)
                            if (palavras[k][t] != matriz[i - t][j - t])
                                ocorrencia = 0;

                        if (ocorrencia)
                            break;
                    }

                    if (palavras[k][1] == matriz[i + 1][j + 1])
                    {
                        ocorrencia = 1;

                        for (t = 0; t < strlen(palavras[k]); t++)
                            if (palavras[k][t] != matriz[i + t][j + t])
                                ocorrencia = 0;

                        if (ocorrencia)
                            break;
                    }

                    if (palavras[k][1] == matriz[i + 1][j - 1])
                    {
                        ocorrencia = 1;

                        for (t = 0; t < strlen(palavras[k]); t++)
                            if (palavras[k][t] != matriz[i + t][j - t])
                                ocorrencia = 0;

                        if (ocorrencia)
                            break;
                    }
                }
            }

            if (ocorrencia)
                break;
        }
         if (ocorrencia)
            printf("%s - PALAVRA ENCONTRADA NA POSICAO %d \n", palavras[k], matriz[i][j]);
        else
            printf("%s - PALAVRA NAO ENCONTRADA\n", palavras[k]);

    }


}
